version: '3.8'

services:
  epcl-sql-agent:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: epcl-vehs-agent
    ports:
      - "8000:8000"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - EPCL_API_KEY=${EPCL_API_KEY:-epcl-production-key}
      - DATABASE_PATH=/app/data/epcl_vehs.db
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - MAX_QUERIES_PER_MINUTE=${MAX_QUERIES_PER_MINUTE:-10}
      - MAX_QUERIES_PER_HOUR=${MAX_QUERIES_PER_HOUR:-100}
      - HOST=0.0.0.0
      - PORT=8000
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./backups:/app/backups
      - ./EPCL VEHS Data (Mar23 - Mar24).xlsx:/app/EPCL VEHS Data (Mar23 - Mar24).xlsx:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - epcl-network
    depends_on:
      - redis
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.epcl-agent.rule=Host(`epcl-agent.local`)"
      - "traefik.http.routers.epcl-agent.entrypoints=web"
      - "traefik.http.services.epcl-agent.loadbalancer.server.port=8000"

  redis:
    image: redis:7-alpine
    container_name: epcl-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    networks:
      - epcl-network

  nginx:
    image: nginx:alpine
    container_name: epcl-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - epcl-sql-agent
    restart: unless-stopped
    networks:
      - epcl-network

  prometheus:
    image: prom/prometheus:latest
    container_name: epcl-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - epcl-network

  grafana:
    image: grafana/grafana:latest
    container_name: epcl-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin123}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - epcl-network

volumes:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  epcl-network:
    driver: bridge
